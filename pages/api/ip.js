let ips = `85.21.168.227
92.100.39.148
109.188.130.219
188.242.179.156
91.190.115.49
92.100.37.229
109.188.133.63
109.188.140.112
188.242.146.180
109.188.130.216
109.188.141.111
109.188.140.9
109.188.143.200
109.188.132.105
109.188.128.36
109.188.133.56
109.188.131.126
109.188.136.143
109.188.131.67
109.188.143.98
109.188.129.181
109.188.139.240
109.188.143.116
109.188.133.45
109.188.134.133
109.188.130.50
109.188.131.131
109.188.139.178
109.188.140.100
109.188.143.86
109.188.128.69
109.188.129.100
109.188.131.236
109.188.139.245
109.188.135.108
109.188.142.73
188.243.88.229
94.25.216.137
188.242.98.220
93.100.77.167
188.243.153.0
88.201.215.39
87.237.118.117
87.237.118.117
87.237.118.117
109.188.143.21
109.188.143.21
94.25.159.213
109.188.75.104
109.188.139.221
109.188.142.14
109.188.130.217
109.188.136.123
109.188.142.41
109.188.132.215
109.188.134.9
77.241.38.59
109.188.135.45
109.188.133.136
109.188.133.53
109.188.131.248
109.188.133.28
109.188.132.124
89.110.36.68
109.188.139.15
46.242.56.177
194.146.241.40
91.190.115.49
188.243.126.57
109.188.143.192
109.188.141.119
94.25.152.43`;

let axios = require('axios');
let check = async (ctx) =>
  await axios.head('http://' + ctx.ip + ':8888', { cors: true }).then((res) => {
    return res.status;
  });

let a = ips.split('\n').map((ip, key) => check);

export default async function handler(req, res) {
  let { body, query, status, headers } = req;
  let { ip } = req.query || req.body;
  if (ip) {
    console.log('check ip: ${ip}');
    let status = await check({ ip, port: 8888 });
    console.log(ip);
    res.status(200).body(status);
  } else {
    res.status(200).json({ ...req });
  }
}
